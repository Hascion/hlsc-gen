/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Halscion, HalscionInterface } from "../../contracts/Halscion";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getCurrentReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260646007553480156200001657600080fd5b5060405162001e0738038062001e0783398181016040528101906200003c9190620003e4565b6040518060400160405280600881526020017f48616c7363696f6e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f484c5343000000000000000000000000000000000000000000000000000000008152508160039081620000b9919062000686565b508060049081620000cb919062000686565b505050620000e03382620000e760201b60201c565b50620008a4565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200015c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620001539190620007b2565b60405180910390fd5b62000170600083836200017460201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001ca578060026000828254620001bd9190620007fe565b92505081905550620002a0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000259578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040162000250939291906200084a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002eb578060026000828254039250508190555062000338565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000397919062000887565b60405180910390a3505050565b600080fd5b6000819050919050565b620003be81620003a9565b8114620003ca57600080fd5b50565b600081519050620003de81620003b3565b92915050565b600060208284031215620003fd57620003fc620003a4565b5b60006200040d84828501620003cd565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049857607f821691505b602082108103620004ae57620004ad62000450565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d9565b620005248683620004d9565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000567620005616200055b84620003a9565b6200053c565b620003a9565b9050919050565b6000819050919050565b620005838362000546565b6200059b62000592826200056e565b848454620004e6565b825550505050565b600090565b620005b2620005a3565b620005bf81848462000578565b505050565b5b81811015620005e757620005db600082620005a8565b600181019050620005c5565b5050565b601f82111562000636576200060081620004b4565b6200060b84620004c9565b810160208510156200061b578190505b620006336200062a85620004c9565b830182620005c4565b50505b505050565b600082821c905092915050565b60006200065b600019846008026200063b565b1980831691505092915050565b600062000676838362000648565b9150826002028217905092915050565b620006918262000416565b67ffffffffffffffff811115620006ad57620006ac62000421565b5b620006b982546200047f565b620006c6828285620005eb565b600060209050601f831160018114620006fe5760008415620006e9578287015190505b620006f5858262000668565b86555062000765565b601f1984166200070e86620004b4565b60005b82811015620007385784890151825560018201915060208501945060208101905062000711565b8683101562000758578489015162000754601f89168262000648565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200079a826200076d565b9050919050565b620007ac816200078d565b82525050565b6000602082019050620007c96000830184620007a1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080b82620003a9565b91506200081883620003a9565b9250828201905080821115620008335762000832620007cf565b5b92915050565b6200084481620003a9565b82525050565b6000606082019050620008616000830186620007a1565b62000870602083018562000839565b6200087f604083018462000839565b949350505050565b60006020820190506200089e600083018462000839565b92915050565b61155380620008b46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634d307e3f1161008c57806395d89b411161006657806395d89b4114610228578063a694fc3a14610246578063a9059cbb14610262578063dd62ed3e14610292576100cf565b80634d307e3f1461019857806370a08231146101c85780637a766460146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce567146101705780633ccfd60b1461018e575b600080fd5b6100dc6102c2565b6040516100e99190610fc0565b60405180910390f35b61010c6004803603810190610107919061107b565b610354565b60405161011991906110d6565b60405180910390f35b61012a610377565b6040516101379190611100565b60405180910390f35b61015a6004803603810190610155919061111b565b610381565b60405161016791906110d6565b60405180910390f35b6101786103b0565b604051610185919061118a565b60405180910390f35b6101966103b9565b005b6101b260048036038101906101ad91906111a5565b61045c565b6040516101bf9190611100565b60405180910390f35b6101e260048036038101906101dd91906111a5565b610544565b6040516101ef9190611100565b60405180910390f35b610212600480360381019061020d91906111a5565b61058c565b60405161021f9190611100565b60405180910390f35b610230610656565b60405161023d9190610fc0565b60405180910390f35b610260600480360381019061025b91906111d2565b6106e8565b005b61027c6004803603810190610277919061107b565b610866565b60405161028991906110d6565b60405180910390f35b6102ac60048036038101906102a791906111ff565b610889565b6040516102b99190611100565b60405180910390f35b6060600380546102d19061126e565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd9061126e565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050905090565b60008061035f610910565b905061036c818585610918565b600191505092915050565b6000600254905090565b60008061038c610910565b905061039985828561092a565b6103a48585856109be565b60019150509392505050565b60006012905090565b6103cb336103c63361045c565b610ab2565b6104153033600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109be565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d6906112eb565b60405180910390fd5b6000600754600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261052f919061133a565b610539919061136e565b905080915050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610606906112eb565b60405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106659061126e565b80601f01602080910402602001604051908101604052809291908181526020018280546106919061126e565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b5050505050905090565b6000811161072b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610722906113fc565b60405180910390fd5b8061073533610544565b1015610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90611468565b60405180910390fd5b6107813330836109be565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d09190611488565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036108635742600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600080610871610910565b905061087e8185856109be565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6109258383836001610b34565b505050565b60006109368484610889565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109b857818110156109a8578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161099f939291906114cb565b60405180910390fd5b6109b784848484036000610b34565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a305760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a279190611502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa25760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a999190611502565b60405180910390fd5b610aad838383610d0b565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b245760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1b9190611502565b60405180910390fd5b610b3060008383610d0b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ba65760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b9d9190611502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c185760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c0f9190611502565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d05578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cfc9190611100565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d5d578060026000828254610d519190611488565b92505081905550610e30565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610de9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610de0939291906114cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e795780600260008282540392505081905550610ec6565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f239190611100565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f6a578082015181840152602081019050610f4f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f9282610f30565b610f9c8185610f3b565b9350610fac818560208601610f4c565b610fb581610f76565b840191505092915050565b60006020820190508181036000830152610fda8184610f87565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101282610fe7565b9050919050565b61102281611007565b811461102d57600080fd5b50565b60008135905061103f81611019565b92915050565b6000819050919050565b61105881611045565b811461106357600080fd5b50565b6000813590506110758161104f565b92915050565b6000806040838503121561109257611091610fe2565b5b60006110a085828601611030565b92505060206110b185828601611066565b9150509250929050565b60008115159050919050565b6110d0816110bb565b82525050565b60006020820190506110eb60008301846110c7565b92915050565b6110fa81611045565b82525050565b600060208201905061111560008301846110f1565b92915050565b60008060006060848603121561113457611133610fe2565b5b600061114286828701611030565b935050602061115386828701611030565b925050604061116486828701611066565b9150509250925092565b600060ff82169050919050565b6111848161116e565b82525050565b600060208201905061119f600083018461117b565b92915050565b6000602082840312156111bb576111ba610fe2565b5b60006111c984828501611030565b91505092915050565b6000602082840312156111e8576111e7610fe2565b5b60006111f684828501611066565b91505092915050565b6000806040838503121561121657611215610fe2565b5b600061122485828601611030565b925050602061123585828601611030565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128657607f821691505b6020821081036112995761129861123f565b5b50919050565b7f4e6f207374616b657320666f7220746869732073656e64657200000000000000600082015250565b60006112d5601983610f3b565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134582611045565b915061135083611045565b92508282039050818111156113685761136761130b565b5b92915050565b600061137982611045565b915061138483611045565b925082820261139281611045565b915082820484148315176113a9576113a861130b565b5b5092915050565b7f43616e6e6f74207374616b6520302e0000000000000000000000000000000000600082015250565b60006113e6600f83610f3b565b91506113f1826113b0565b602082019050919050565b60006020820190508181036000830152611415816113d9565b9050919050565b7f496e73756666696369656e742042616c616e6365000000000000000000000000600082015250565b6000611452601483610f3b565b915061145d8261141c565b602082019050919050565b6000602082019050818103600083015261148181611445565b9050919050565b600061149382611045565b915061149e83611045565b92508282019050808211156114b6576114b561130b565b5b92915050565b6114c581611007565b82525050565b60006060820190506114e060008301866114bc565b6114ed60208301856110f1565b6114fa60408301846110f1565b949350505050565b600060208201905061151760008301846114bc565b9291505056fea2646970667358221220a92c866831e893c8cd83b96b1f8d2861cb419db85ecd2f2c72fbae1ea0c8193d64736f6c63430008140033";

type HalscionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HalscionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Halscion__factory extends ContractFactory {
  constructor(...args: HalscionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    amount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(amount, overrides || {});
  }
  override deploy(
    amount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(amount, overrides || {}) as Promise<
      Halscion & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Halscion__factory {
    return super.connect(runner) as Halscion__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HalscionInterface {
    return new Interface(_abi) as HalscionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Halscion {
    return new Contract(address, _abi, runner) as unknown as Halscion;
  }
}
